[
  {
    "name": "Context Management",
    "functions": [
      "ggml_backend_alloc_ctx_tensors_from_buft",
      "ggml_backend_alloc_ctx_tensors",
      "ggml_init",
      "ggml_reset",
      "ggml_free",
      "ggml_get_no_alloc",
      "ggml_set_no_alloc"
    ]
  },
  {
    "name": "Tensor and Graph Allocators",
    "functions": [
      "ggml_tallocr_new",
      "ggml_tallocr_alloc",
      "ggml_gallocr_new",
      "ggml_gallocr_new_n",
      "ggml_gallocr_free",
      "ggml_gallocr_reserve",
      "ggml_gallocr_reserve_n",
      "ggml_gallocr_alloc_graph",
      "ggml_gallocr_get_buffer_size"
    ]
  },
  {
    "name": "Graph Construction & Execution",
    "functions": [
      "ggml_graph_plan",
      "ggml_graph_compute",
      "ggml_graph_compute_with_ctx",
      "ggml_new_graph",
      "ggml_new_graph_custom",
      "ggml_graph_dup",
      "ggml_graph_cpy",
      "ggml_graph_reset",
      "ggml_graph_clear",
      "ggml_graph_size",
      "ggml_graph_node",
      "ggml_graph_nodes",
      "ggml_graph_n_nodes",
      "ggml_graph_add_node",
      "ggml_graph_overhead",
      "ggml_graph_overhead_custom",
      "ggml_graph_get_tensor",
      "ggml_graph_get_grad",
      "ggml_graph_get_grad_acc",
      "ggml_graph_export",
      "ggml_graph_import",
      "ggml_graph_print",
      "ggml_graph_dump_dot"
    ]
  },
  {
    "name": "Backend Tensor, Graph & Event Operations",
    "functions": [
      "ggml_backend_tensor_copy",
      "ggml_backend_guid",
      "ggml_backend_name",
      "ggml_backend_free",
      "ggml_backend_get_default_buffer_type",
      "ggml_backend_alloc_buffer",
      "ggml_backend_get_alignment",
      "ggml_backend_get_max_size",
      "ggml_backend_tensor_set_async",
      "ggml_backend_tensor_get_async",
      "ggml_backend_tensor_set",
      "ggml_backend_tensor_get",
      "ggml_backend_tensor_memset",
      "ggml_backend_synchronize",
      "ggml_backend_graph_plan_create",
      "ggml_backend_graph_plan_free",
      "ggml_backend_graph_plan_compute",
      "ggml_backend_graph_compute",
      "ggml_backend_graph_compute_async",
      "ggml_backend_supports_op",
      "ggml_backend_supports_buft",
      "ggml_backend_offload_op",
      "ggml_backend_tensor_copy_async",
      "ggml_backend_get_device",
      "ggml_backend_event_new",
      "ggml_backend_event_free",
      "ggml_backend_event_record",
      "ggml_backend_event_synchronize",
      "ggml_backend_event_wait",
      "ggml_backend_dev_name",
      "ggml_backend_dev_description",
      "ggml_backend_dev_memory",
      "ggml_backend_dev_type",
      "ggml_backend_dev_get_props",
      "ggml_backend_dev_backend_reg",
      "ggml_backend_dev_init",
      "ggml_backend_dev_buffer_type",
      "ggml_backend_dev_host_buffer_type",
      "ggml_backend_dev_buffer_from_host_ptr",
      "ggml_backend_dev_supports_op",
      "ggml_backend_dev_supports_buft",
      "ggml_backend_dev_offload_op",
      "ggml_backend_reg_name",
      "ggml_backend_reg_dev_count",
      "ggml_backend_reg_dev_get",
      "ggml_backend_reg_get_proc_address",
      "ggml_backend_device_register",
      "ggml_backend_reg_count",
      "ggml_backend_reg_get",
      "ggml_backend_reg_by_name",
      "ggml_backend_dev_count",
      "ggml_backend_dev_get",
      "ggml_backend_dev_by_name",
      "ggml_backend_dev_by_type",
      "ggml_backend_init_by_name",
      "ggml_backend_init_by_type",
      "ggml_backend_init_best",
      "ggml_backend_load",
      "ggml_backend_unload",
      "ggml_backend_load_all",
      "ggml_backend_load_all_from_path",
      "ggml_backend_sched_new",
      "ggml_backend_sched_free",
      "ggml_backend_sched_reserve",
      "ggml_backend_sched_get_n_backends",
      "ggml_backend_sched_get_backend",
      "ggml_backend_sched_get_n_splits",
      "ggml_backend_sched_get_n_copies",
      "ggml_backend_sched_get_buffer_size",
      "ggml_backend_sched_set_tensor_backend",
      "ggml_backend_sched_get_tensor_backend",
      "ggml_backend_sched_alloc_graph",
      "ggml_backend_sched_graph_compute",
      "ggml_backend_sched_graph_compute_async",
      "ggml_backend_sched_synchronize",
      "ggml_backend_sched_reset",
      "ggml_backend_sched_set_eval_callback",
      "ggml_backend_graph_copy",
      "ggml_backend_graph_copy_free",
      "ggml_backend_compare_graph_backend",
      "ggml_backend_tensor_alloc",
      "ggml_backend_view_init"
    ]
  },
  {
    "name": "Mathematical Operations & Element-wise Arithmetic",
    "functions": [
      "ggml_new_i32",
      "ggml_new_f32",
      "ggml_set_i32",
      "ggml_set_f32",
      "ggml_get_i32_1d",
      "ggml_set_i32_1d",
      "ggml_get_i32_nd",
      "ggml_set_i32_nd",
      "ggml_get_f32_1d",
      "ggml_set_f32_1d",
      "ggml_get_f32_nd",
      "ggml_set_f32_nd",
      "ggml_add",
      "ggml_add_inplace",
      "ggml_add_cast",
      "ggml_add1",
      "ggml_add1_inplace",
      "ggml_acc",
      "ggml_acc_inplace",
      "ggml_sub",
      "ggml_sub_inplace",
      "ggml_mul",
      "ggml_mul_inplace",
      "ggml_div",
      "ggml_div_inplace",
      "ggml_sqr",
      "ggml_sqr_inplace",
      "ggml_sqrt",
      "ggml_sqrt_inplace",
      "ggml_log",
      "ggml_log_inplace",
      "ggml_sin",
      "ggml_sin_inplace",
      "ggml_cos",
      "ggml_cos_inplace",
      "ggml_exp",
      "ggml_exp_inplace",
      "ggml_scale",
      "ggml_scale_inplace"
    ]
  },
  {
    "name": "Activation Functions & Normalization",
    "functions": [
      "ggml_tanh",
      "ggml_tanh_inplace",
      "ggml_elu",
      "ggml_elu_inplace",
      "ggml_relu",
      "ggml_leaky_relu",
      "ggml_relu_inplace",
      "ggml_sigmoid",
      "ggml_sigmoid_inplace",
      "ggml_gelu",
      "ggml_gelu_inplace",
      "ggml_gelu_quick",
      "ggml_gelu_quick_inplace",
      "ggml_silu",
      "ggml_silu_inplace",
      "ggml_silu_back",
      "ggml_hardswish",
      "ggml_hardsigmoid",
      "ggml_norm",
      "ggml_norm_inplace",
      "ggml_rms_norm",
      "ggml_rms_norm_inplace",
      "ggml_group_norm",
      "ggml_group_norm_inplace",
      "ggml_rms_norm_back"
    ]
  },
  {
    "name": "Tensor Duplication, Copy & Reshaping",
    "functions": [
      "ggml_dup_tensor",
      "ggml_view_tensor",
      "ggml_get_first_tensor",
      "ggml_get_next_tensor",
      "ggml_get_tensor",
      "ggml_new_tensor",
      "ggml_new_tensor_1d",
      "ggml_new_tensor_2d",
      "ggml_new_tensor_3d",
      "ggml_new_tensor_4d",
      "ggml_new_buffer",
      "ggml_dup",
      "ggml_dup_inplace",
      "ggml_set",
      "ggml_set_inplace",
      "ggml_set_1d",
      "ggml_set_1d_inplace",
      "ggml_set_2d",
      "ggml_set_2d_inplace",
      "ggml_cpy",
      "ggml_cast",
      "ggml_cont",
      "ggml_cont_1d",
      "ggml_cont_2d",
      "ggml_cont_3d",
      "ggml_cont_4d",
      "ggml_reshape",
      "ggml_reshape_1d",
      "ggml_reshape_2d",
      "ggml_reshape_3d",
      "ggml_reshape_4d",
      "ggml_view_1d",
      "ggml_view_2d",
      "ggml_view_3d",
      "ggml_view_4d",
      "ggml_permute",
      "ggml_transpose"
    ]
  },
  {
    "name": "Indexing, Reduction & Repetition Operations",
    "functions": [
      "ggml_sum",
      "ggml_sum_rows",
      "ggml_mean",
      "ggml_argmax",
      "ggml_count_equal",
      "ggml_repeat",
      "ggml_repeat_back",
      "ggml_concat",
      "ggml_get_rows",
      "ggml_get_rows_back",
      "ggml_diag",
      "ggml_diag_mask_inf",
      "ggml_diag_mask_inf_inplace",
      "ggml_diag_mask_zero",
      "ggml_diag_mask_zero_inplace",
      "ggml_soft_max",
      "ggml_soft_max_inplace",
      "ggml_soft_max_ext",
      "ggml_soft_max_ext_back",
      "ggml_soft_max_ext_back_inplace",
      "ggml_argsort",
      "ggml_arange",
      "ggml_top_k"
    ]
  },
  {
    "name": "Convolution, Pooling & Image Operations",
    "functions": [
      "ggml_im2col",
      "ggml_im2col_back",
      "ggml_conv_1d",
      "ggml_conv_1d_ph",
      "ggml_conv_1d_dw",
      "ggml_conv_1d_dw_ph",
      "ggml_conv_transpose_1d",
      "ggml_conv_2d",
      "ggml_conv_2d_sk_p0",
      "ggml_conv_2d_s1_ph",
      "ggml_conv_2d_dw",
      "ggml_conv_transpose_2d_p0",
      "ggml_pool_1d",
      "ggml_pool_2d",
      "ggml_pool_2d_back",
      "ggml_upscale",
      "ggml_upscale_ext",
      "ggml_pad",
      "ggml_pad_reflect_1d"
    ]
  },
  {
    "name": "Sequence & Attention Operations",
    "functions": [
      "ggml_timestep_embedding",
      "ggml_flash_attn_ext",
      "ggml_flash_attn_ext_set_prec",
      "ggml_flash_attn_ext_get_prec",
      "ggml_flash_attn_back",
      "ggml_ssm_conv",
      "ggml_ssm_scan",
      "ggml_win_part",
      "ggml_win_unpart",
      "ggml_unary",
      "ggml_unary_inplace",
      "ggml_get_rel_pos",
      "ggml_add_rel_pos",
      "ggml_add_rel_pos_inplace",
      "ggml_rwkv_wkv6",
      "ggml_gated_linear_attn"
    ]
  },
  {
    "name": "Backend Buffer Management",
    "functions": [
      "ggml_backend_buft_name",
      "ggml_backend_buft_alloc_buffer",
      "ggml_backend_buft_get_alignment",
      "ggml_backend_buft_get_max_size",
      "ggml_backend_buft_get_alloc_size",
      "ggml_backend_buft_is_host",
      "ggml_backend_buft_get_device",
      "ggml_backend_buffer_name",
      "ggml_backend_buffer_free",
      "ggml_backend_buffer_get_base",
      "ggml_backend_buffer_get_size",
      "ggml_backend_buffer_init_tensor",
      "ggml_backend_buffer_get_alignment",
      "ggml_backend_buffer_get_max_size",
      "ggml_backend_buffer_get_alloc_size",
      "ggml_backend_buffer_clear",
      "ggml_backend_buffer_is_host",
      "ggml_backend_buffer_set_usage",
      "ggml_backend_buffer_get_usage",
      "ggml_backend_buffer_get_type",
      "ggml_backend_buffer_reset"
    ]
  },
  {
    "name": "Tensor Optimization & Training",
    "functions": [
      "ggml_opt_dataset_init",
      "ggml_opt_dataset_free",
      "ggml_opt_dataset_data",
      "ggml_opt_dataset_labels",
      "ggml_opt_dataset_shuffle",
      "ggml_opt_dataset_get_batch",
      "ggml_opt_get_default_optimizer_params",
      "ggml_opt_default_params",
      "ggml_opt_init",
      "ggml_opt_free",
      "ggml_opt_reset",
      "ggml_opt_inputs",
      "ggml_opt_outputs",
      "ggml_opt_labels",
      "ggml_opt_loss",
      "ggml_opt_pred",
      "ggml_opt_ncorrect",
      "ggml_opt_grad_acc",
      "ggml_opt_result_init",
      "ggml_opt_result_free",
      "ggml_opt_result_reset",
      "ggml_opt_result_ndata",
      "ggml_opt_result_loss",
      "ggml_opt_result_pred",
      "ggml_opt_result_accuracy",
      "ggml_opt_forward",
      "ggml_opt_forward_backward",
      "ggml_opt_epoch",
      "ggml_opt_epoch_callback_progress_bar",
      "ggml_opt_fit",
      "ggml_opt_step_adamw"
    ]
  },
  {
    "name": "Custom Mapping & Loss Functions",
    "functions": [
      "ggml_map_unary_f32",
      "ggml_map_unary_inplace_f32",
      "ggml_map_binary_f32",
      "ggml_map_binary_inplace_f32",
      "ggml_map_custom1_f32",
      "ggml_map_custom1_inplace_f32",
      "ggml_map_custom2_f32",
      "ggml_map_custom2_inplace_f32",
      "ggml_map_custom3_f32",
      "ggml_map_custom3_inplace_f32",
      "ggml_map_custom1",
      "ggml_map_custom1_inplace",
      "ggml_map_custom2",
      "ggml_map_custom2_inplace",
      "ggml_map_custom3",
      "ggml_map_custom3_inplace",
      "ggml_cross_entropy_loss",
      "ggml_cross_entropy_loss_back"
    ]
  },
  {
    "name": "Utility & Information Functions",
    "functions": [
      "ggml_fp16_to_fp32",
      "ggml_fp32_to_fp16",
      "ggml_fp16_to_fp32_row",
      "ggml_fp32_to_fp16_row",
      "ggml_fp32_to_bf16",
      "ggml_bf16_to_fp32",
      "ggml_bf16_to_fp32_row",
      "ggml_fp32_to_bf16_row_ref",
      "ggml_fp32_to_bf16_row",
      "ggml_guid_matches",
      "ggml_time_init",
      "ggml_time_ms",
      "ggml_time_us",
      "ggml_cycles",
      "ggml_cycles_per_ms",
      "ggml_fopen",
      "ggml_print_object",
      "ggml_print_objects",
      "ggml_nelements",
      "ggml_nrows",
      "ggml_nbytes",
      "ggml_nbytes_pad",
      "ggml_blck_size",
      "ggml_type_size",
      "ggml_row_size",
      "ggml_type_sizef",
      "ggml_type_name",
      "ggml_op_name",
      "ggml_op_symbol",
      "ggml_unary_op_name",
      "ggml_op_desc",
      "ggml_element_size",
      "ggml_is_quantized",
      "ggml_ftype_to_ggml_type",
      "ggml_is_transposed",
      "ggml_is_permuted",
      "ggml_is_empty",
      "ggml_is_scalar",
      "ggml_is_vector",
      "ggml_is_matrix",
      "ggml_is_3d",
      "ggml_n_dims",
      "ggml_is_contiguous",
      "ggml_is_contiguous_0",
      "ggml_is_contiguous_1",
      "ggml_is_contiguous_2",
      "ggml_are_same_shape",
      "ggml_are_same_stride",
      "ggml_can_repeat",
      "ggml_tensor_overhead",
      "ggml_validate_row_data",
      "ggml_used_mem",
      "ggml_get_mem_buffer",
      "ggml_get_mem_size",
      "ggml_get_max_tensor_size",
      "ggml_get_data",
      "ggml_get_data_f32",
      "ggml_get_name",
      "ggml_set_name",
      "ggml_format_name",
      "ggml_log_set",
      "ggml_set_zero"
    ]
  },
  {
    "name": "Quantization",
    "functions": [
      "ggml_quantize_init",
      "ggml_quantize_free",
      "ggml_quantize_requires_imatrix",
      "ggml_quantize_chunk"
    ]
  },
  {
    "name": "GGUF File Operations",
    "functions": [
      "gguf_init_empty",
      "gguf_init_from_file",
      "gguf_free",
      "gguf_type_name",
      "gguf_get_version",
      "gguf_get_alignment",
      "gguf_get_data_offset",
      "gguf_get_n_kv",
      "gguf_find_key",
      "gguf_get_key",
      "gguf_get_kv_type",
      "gguf_get_arr_type",
      "gguf_get_val_u8",
      "gguf_get_val_i8",
      "gguf_get_val_u16",
      "gguf_get_val_i16",
      "gguf_get_val_u32",
      "gguf_get_val_i32",
      "gguf_get_val_f32",
      "gguf_get_val_u64",
      "gguf_get_val_i64",
      "gguf_get_val_f64",
      "gguf_get_val_bool",
      "gguf_get_val_str",
      "gguf_get_val_data",
      "gguf_get_arr_n",
      "gguf_get_arr_data",
      "gguf_get_arr_str",
      "gguf_get_n_tensors",
      "gguf_find_tensor",
      "gguf_get_tensor_offset",
      "gguf_get_tensor_name",
      "gguf_get_tensor_type",
      "gguf_get_tensor_size",
      "gguf_remove_key",
      "gguf_set_val_u8",
      "gguf_set_val_i8",
      "gguf_set_val_u16",
      "gguf_set_val_i16",
      "gguf_set_val_u32",
      "gguf_set_val_i32",
      "gguf_set_val_f32",
      "gguf_set_val_u64",
      "gguf_set_val_i64",
      "gguf_set_val_f64",
      "gguf_set_val_bool",
      "gguf_set_val_str",
      "gguf_set_arr_data",
      "gguf_set_arr_str",
      "gguf_set_kv",
      "gguf_add_tensor",
      "gguf_set_tensor_type",
      "gguf_set_tensor_data",
      "gguf_write_to_file",
      "gguf_get_meta_size",
      "gguf_get_meta_data"
    ]
  },
  {
    "name": "Threadpool Management",
    "functions": [
      "ggml_threadpool_new",
      "ggml_threadpool_free",
      "ggml_threadpool_get_n_threads",
      "ggml_threadpool_pause",
      "ggml_threadpool_resume",
      "ggml_threadpool_params_default",
      "ggml_threadpool_params_init",
      "ggml_threadpool_params_match"
    ]
  }, 
  {
    "name": "CPU Backend Operations",
    "functions": [
      "ggml_cpu_has_sse3",
      "ggml_cpu_has_ssse3",
      "ggml_cpu_has_avx",
      "ggml_cpu_has_avx_vnni",
      "ggml_cpu_has_avx2",
      "ggml_cpu_has_f16c",
      "ggml_cpu_has_fma",
      "ggml_cpu_has_avx512",
      "ggml_cpu_has_avx512_vbmi",
      "ggml_cpu_has_avx512_vnni",
      "ggml_cpu_has_avx512_bf16",
      "ggml_cpu_has_amx_int8",
      "ggml_cpu_has_neon",
      "ggml_cpu_has_arm_fma",
      "ggml_cpu_has_fp16_va",
      "ggml_cpu_has_dotprod",
      "ggml_cpu_has_matmul_int8",
      "ggml_cpu_has_sve",
      "ggml_cpu_get_sve_cnt",
      "ggml_cpu_has_riscv_v",
      "ggml_cpu_has_vsx",
      "ggml_cpu_has_wasm_simd",
      "ggml_cpu_has_llamafile",
      "ggml_get_type_traits_cpu",
      "ggml_cpu_init",
      "ggml_backend_cpu_init",
      "ggml_backend_is_cpu",
      "ggml_backend_cpu_set_n_threads",
      "ggml_backend_cpu_set_threadpool",
      "ggml_backend_cpu_set_abort_callback",
      "ggml_backend_cpu_reg",
      "ggml_backend_cpu_buffer_from_ptr",
      "ggml_backend_cpu_buffer_type"
    ]
  },
  {
    "name": "CUDA Backend Operations",
    "functions": [
      "ggml_backend_cuda_init",
      "ggml_backend_is_cuda",
      "ggml_backend_cuda_buffer_type",
      "ggml_backend_cuda_split_buffer_type",
      "ggml_backend_cuda_host_buffer_type",
      "ggml_backend_cuda_get_device_count",
      "ggml_backend_cuda_get_device_description",
      "ggml_backend_cuda_get_device_memory",
      "ggml_backend_cuda_register_host_buffer",
      "ggml_backend_cuda_unregister_host_buffer",
      "ggml_backend_cuda_reg"
    ]
  },
  {
    "name": "Vulkan Backend Operations",
    "functions": [
      "ggml_vk_available_devices",
      "ggml_vk_get_device",
      "ggml_vk_has_vulkan",
      "ggml_vk_has_device",
      "ggml_vk_current_device",
      "ggml_backend_vk_init",
      "ggml_backend_is_vk",
      "ggml_backend_vk_get_device_count",
      "ggml_backend_vk_get_device_description",
      "ggml_backend_vk_get_device_memory",
      "ggml_backend_vk_buffer_type",
      "ggml_backend_vk_host_buffer_type",
      "ggml_backend_vk_reg"
    ]
  },
  {
    "name": "Metal Backend Operations",
    "functions": [
      "ggml_backend_metal_init",
      "ggml_backend_is_metal",
      "ggml_backend_metal_buffer_from_ptr",
      "ggml_backend_metal_set_abort_callback",
      "ggml_backend_metal_buffer_type",
      "ggml_backend_metal_supports_family",
      "ggml_backend_metal_capture_next_compute",
      "ggml_backend_metal_reg"
    ]
  },
  {
    "name": "OpenCL Backend Operations",
    "functions": [
      "ggml_backend_opencl_init",
      "ggml_backend_is_opencl",
      "ggml_backend_opencl_buffer_type",
      "ggml_backend_opencl_host_buffer_type",
      "ggml_backend_opencl_reg"
    ]
  },
  {
    "name": "CANN Backend Operations",
    "functions": [
      "ggml_backend_cann_reg",
      "ggml_backend_cann_init",
      "ggml_backend_is_cann",
      "ggml_backend_cann_buffer_type",
      "ggml_backend_cann_get_device_count",
      "ggml_backend_cann_host_buffer_type",
      "ggml_backend_cann_get_device_description",
      "ggml_backend_cann_get_device_memory"
    ]
  },
  {
    "name": "Kompute Backend Operations",
    "functions": [
      "ggml_backend_kompute_init",
      "ggml_backend_is_kompute",
      "ggml_backend_kompute_buffer_type",
      "ggml_backend_kompute_reg"
    ]
  },
  {
    "name": "RPC Backend Operations",
    "functions": [
      "ggml_backend_rpc_init",
      "ggml_backend_is_rpc",
      "ggml_backend_rpc_buffer_type",
      "ggml_backend_rpc_get_device_memory",
      "ggml_backend_rpc_start_server",
      "ggml_backend_rpc_reg",
      "ggml_backend_rpc_add_device"
    ]
  },
  {
    "name": "SYCL Backend Operations",
    "functions": [
      "ggml_backend_sycl_init",
      "ggml_backend_is_sycl",
      "ggml_backend_sycl_buffer_type",
      "ggml_backend_sycl_split_buffer_type",
      "ggml_backend_sycl_host_buffer_type",
      "ggml_backend_sycl_print_sycl_devices",
      "ggml_backend_sycl_get_gpu_list",
      "ggml_backend_sycl_get_device_description",
      "ggml_backend_sycl_get_device_count",
      "ggml_backend_sycl_get_device_memory",
      "ggml_backend_sycl_reg"
    ]
  }
]
